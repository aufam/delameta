stages:
  - build-amd64
  - build-arm64
  - build-arm32

build-amd64:
  stage: build-amd64
  only:
    - /^release\/.*/
  image: debian:bullseye
  before_script:
    - apt update
    - apt install -y --no-install-recommends \
      g++ \
      build-essential \
      ninja-build \
      cmake \
      git \
      ca-certificates \
      libssl-dev
  script:
    - mkdir -p build
    - cmake -B build \
      -G Ninja \
      -DDELAMETA_BUILD_APP=ON \
      -DDELAMETA_BUILD_TEST=ON \
      -DDELAMETA_CXX_STANDARD=20 \
      -DCMAKE_BUILD_TYPE=Release
    - cmake --build build
    - ctest --test-dir build --output-on-failure
    - cmake --build build -t build-deb
  artifacts:
    paths:
      - build/*.deb

build-arm64:
  stage: build-arm64
  only:
    - /^release\/.*/
  image: arm64v8/debian:bullseye
  before_script:
    - apt update
    - apt install -y --no-install-recommends \
      g++ \
      build-essential \
      ninja-build \
      cmake \
      git \
      ca-certificates \
      libssl-dev
  script:
    - mkdir -p build
    - cmake -B build \
      -G Ninja \
      -DDELAMETA_BUILD_APP=ON \
      -DDELAMETA_BUILD_TEST=ON \
      -DDELAMETA_CXX_STANDARD=20 \
      -DCMAKE_BUILD_TYPE=Release
    - cmake --build build
    - ctest --test-dir build --output-on-failure
    - cmake --build build -t build-deb
  artifacts:
    paths:
      - build/*.deb

build-arm32:
  stage: build-arm32
  only:
    - /^release\/.*/
  image: arm32v8/debian:bullseye
  before_script:
    - apt update
    - apt install -y --no-install-recommends \
      g++ \
      build-essential \
      ninja-build \
      cmake \
      git \
      ca-certificates \
      libssl-dev
  script:
    - mkdir -p build
    - cmake -B build \
      -G Ninja \
      -DDELAMETA_BUILD_APP=ON \
      -DDELAMETA_BUILD_TEST=ON \
      -DDELAMETA_CXX_STANDARD=20 \
      -DCMAKE_BUILD_TYPE=Release
    - cmake --build build
    - ctest --test-dir build --output-on-failure
    - cmake --build build -t build-deb
  artifacts:
    paths:
      - build/*.deb

